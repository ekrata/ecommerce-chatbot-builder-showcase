{
 "Resources": {
  "CustomResourceHandlerServiceRole41AEC181": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ]
   }
  },
  "CustomResourceHandlerE8FB56BA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-206508349906-us-east-1",
     "S3Key": "2bcc77ae8ed65efe9ca220676a8756752acb41c74e4e334cedba12200af20acd.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "CustomResourceHandlerServiceRole41AEC181",
      "Arn"
     ]
    },
    "Handler": "index.handler",
    "MemorySize": 1024,
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "CustomResourceHandlerServiceRole41AEC181"
   ]
  },
  "ConnectionsTable916FDB22": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "local-crow-Connections",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "ConnectionsParametertableName54B3BE98": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": {
     "Ref": "ConnectionsTable916FDB22"
    },
    "Name": "/sst/crow/local/Table/Connections/tableName",
    "Tags": {
     "sst:app": "crow",
     "sst:stage": "local"
    }
   }
  },
  "ApiCD79AAA0": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "local-crow-Api",
    "ProtocolType": "WEBSOCKET",
    "RouteSelectionExpression": "$request.body.action",
    "Tags": {
     "sst:app": "crow",
     "sst:stage": "local"
    }
   }
  },
  "ApiAPIGatewayCloudWatchRolePolicy1B35D79A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "apigateway:GET",
        "apigateway:PATCH"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":apigateway:us-east-1::/account"
         ]
        ]
       }
      },
      {
       "Action": [
        "iam:CreateRole",
        "iam:PassRole",
        "iam:AttachRolePolicy"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":iam::206508349906:role/apigateway-cloudwatch-logs-role"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApiAPIGatewayCloudWatchRolePolicy1B35D79A",
    "Roles": [
     {
      "Ref": "CustomResourceHandlerServiceRole41AEC181"
     }
    ]
   }
  },
  "ApiAPIGatewayCloudWatchRoleD34A70FD": {
   "Type": "Custom::APIGatewayCloudWatchRole",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomResourceHandlerE8FB56BA",
      "Arn"
     ]
    },
    "roleName": "apigateway-cloudwatch-logs-role",
    "roleArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::206508349906:role/apigateway-cloudwatch-logs-role"
      ]
     ]
    }
   },
   "DependsOn": [
    "ApiAPIGatewayCloudWatchRolePolicy1B35D79A"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ApiStage4697DF29": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "ApiCD79AAA0"
    },
    "StageName": "local",
    "AccessLogSettings": {
     "DestinationArn": {
      "Fn::GetAtt": [
       "ApiLogGroup1717FE17",
       "Arn"
      ]
     },
     "Format": "{\"requestTime\":\"$context.requestTime\",\"requestId\":\"$context.requestId\",\"eventType\":\"$context.eventType\",\"routeKey\":\"$context.routeKey\",\"status\":$context.status,\"integrationRequestId\":\"$context.awsEndpointRequestId\",\"integrationStatus\":\"$context.integrationStatus\",\"integrationLatency\":\"$context.integrationLatency\",\"integrationServiceStatus\":\"$context.integration.integrationStatus\",\"ip\":\"$context.identity.sourceIp\",\"userAgent\":\"$context.identity.userAgent\",\"cognitoIdentityId\":\"$context.identity.cognitoIdentityId\",\"connectedAt\":\"$context.connectedAt\",\"connectionId\":\"$context.connectionId\"}"
    },
    "AutoDeploy": true,
    "Tags": {
     "sst:app": "crow",
     "sst:stage": "local"
    }
   },
   "DependsOn": [
    "ApiAPIGatewayCloudWatchRoleD34A70FD"
   ]
  },
  "ApiLogGroup1717FE17": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/vendedlogs/apis/local-crow-Api-",
       {
        "Ref": "ApiCD79AAA0"
       },
       "/local"
      ]
     ]
    },
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain"
  },
  "ApiconnectServiceRoleB38A655D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ]
   }
  },
  "ApiconnectServiceRoleDefaultPolicy530B764C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "dynamodb:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConnectionsTable916FDB22",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ConnectionsTable916FDB22",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "execute-api:ManageConnections",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":execute-api:us-east-1:206508349906:",
          {
           "Ref": "ApiCD79AAA0"
          },
          "/*/*/@connections/*"
         ]
        ]
       }
      },
      {
       "Action": "iot:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": "arn:aws:s3:::sstbootstrap-useast124d14e4b-1hfi2zvusee82"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApiconnectServiceRoleDefaultPolicy530B764C",
    "Roles": [
     {
      "Ref": "ApiconnectServiceRoleB38A655D"
     }
    ]
   }
  },
  "Apiconnect6ADFCB1F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-206508349906-us-east-1",
     "S3Key": "9fe9969c98dee83cbe72e215307d8491aa401ab9894e93572633e9002918d92c.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ApiconnectServiceRoleB38A655D",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "SST_FUNCTION_ID": "c806965eb52afa97238316bc6a0cf9983493f217f1",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "SST_APP": "crow",
      "SST_STAGE": "local",
      "SST_SSM_PREFIX": "/sst/crow/local/",
      "SST_Table_tableName_Connections": {
       "Ref": "ConnectionsTable916FDB22"
      }
     }
    },
    "EphemeralStorage": {
     "Size": 512
    },
    "Handler": "bridge.handler",
    "MemorySize": 1024,
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ],
    "Timeout": 10,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "ApiconnectServiceRoleDefaultPolicy530B764C",
    "ApiconnectServiceRoleB38A655D"
   ]
  },
  "ApiconnectEventInvokeConfig04F8B351": {
   "Type": "AWS::Lambda::EventInvokeConfig",
   "Properties": {
    "FunctionName": {
     "Ref": "Apiconnect6ADFCB1F"
    },
    "Qualifier": "$LATEST",
    "MaximumRetryAttempts": 0
   }
  },
  "ApiRouteconnectIntegrationconnectPermissionE1C61B07": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Apiconnect6ADFCB1F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:206508349906:",
       {
        "Ref": "ApiCD79AAA0"
       },
       "/*/*$connect"
      ]
     ]
    }
   }
  },
  "ApiRouteconnectIntegrationconnect921690DB": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ApiCD79AAA0"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "Apiconnect6ADFCB1F",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   }
  },
  "ApiRouteconnectB48BEBFF": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ApiCD79AAA0"
    },
    "RouteKey": "$connect",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ApiRouteconnectIntegrationconnect921690DB"
       }
      ]
     ]
    }
   }
  },
  "ApidisconnectServiceRole73693786": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ]
   }
  },
  "ApidisconnectServiceRoleDefaultPolicy37A097B3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "dynamodb:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConnectionsTable916FDB22",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ConnectionsTable916FDB22",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "execute-api:ManageConnections",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":execute-api:us-east-1:206508349906:",
          {
           "Ref": "ApiCD79AAA0"
          },
          "/*/*/@connections/*"
         ]
        ]
       }
      },
      {
       "Action": "iot:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": "arn:aws:s3:::sstbootstrap-useast124d14e4b-1hfi2zvusee82"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApidisconnectServiceRoleDefaultPolicy37A097B3",
    "Roles": [
     {
      "Ref": "ApidisconnectServiceRole73693786"
     }
    ]
   }
  },
  "ApidisconnectCB51A101": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-206508349906-us-east-1",
     "S3Key": "9fe9969c98dee83cbe72e215307d8491aa401ab9894e93572633e9002918d92c.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ApidisconnectServiceRole73693786",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "SST_FUNCTION_ID": "c86bdc78e88848195f82f4cbc6fa29b0e6979a9673",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "SST_APP": "crow",
      "SST_STAGE": "local",
      "SST_SSM_PREFIX": "/sst/crow/local/",
      "SST_Table_tableName_Connections": {
       "Ref": "ConnectionsTable916FDB22"
      }
     }
    },
    "EphemeralStorage": {
     "Size": 512
    },
    "Handler": "bridge.handler",
    "MemorySize": 1024,
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ],
    "Timeout": 10,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "ApidisconnectServiceRoleDefaultPolicy37A097B3",
    "ApidisconnectServiceRole73693786"
   ]
  },
  "ApidisconnectEventInvokeConfig00A98405": {
   "Type": "AWS::Lambda::EventInvokeConfig",
   "Properties": {
    "FunctionName": {
     "Ref": "ApidisconnectCB51A101"
    },
    "Qualifier": "$LATEST",
    "MaximumRetryAttempts": 0
   }
  },
  "ApiRoutedisconnectIntegrationdisconnectPermission3A437C86": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ApidisconnectCB51A101",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:206508349906:",
       {
        "Ref": "ApiCD79AAA0"
       },
       "/*/*$disconnect"
      ]
     ]
    }
   }
  },
  "ApiRoutedisconnectIntegrationdisconnect79054E04": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ApiCD79AAA0"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "ApidisconnectCB51A101",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   }
  },
  "ApiRoutedisconnectA45E960F": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ApiCD79AAA0"
    },
    "RouteKey": "$disconnect",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ApiRoutedisconnectIntegrationdisconnect79054E04"
       }
      ]
     ]
    }
   }
  },
  "ApisendmessageServiceRole3662664F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ]
   }
  },
  "ApisendmessageServiceRoleDefaultPolicyA129B65D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "dynamodb:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConnectionsTable916FDB22",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ConnectionsTable916FDB22",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "execute-api:ManageConnections",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":execute-api:us-east-1:206508349906:",
          {
           "Ref": "ApiCD79AAA0"
          },
          "/*/*/@connections/*"
         ]
        ]
       }
      },
      {
       "Action": "iot:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": "arn:aws:s3:::sstbootstrap-useast124d14e4b-1hfi2zvusee82"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ApisendmessageServiceRoleDefaultPolicyA129B65D",
    "Roles": [
     {
      "Ref": "ApisendmessageServiceRole3662664F"
     }
    ]
   }
  },
  "Apisendmessage758172CC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-206508349906-us-east-1",
     "S3Key": "9fe9969c98dee83cbe72e215307d8491aa401ab9894e93572633e9002918d92c.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ApisendmessageServiceRole3662664F",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "SST_FUNCTION_ID": "c89d7e9fb7375544de45a5007d70c7b8ebd815187f",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "SST_APP": "crow",
      "SST_STAGE": "local",
      "SST_SSM_PREFIX": "/sst/crow/local/",
      "SST_Table_tableName_Connections": {
       "Ref": "ConnectionsTable916FDB22"
      }
     }
    },
    "EphemeralStorage": {
     "Size": 512
    },
    "Handler": "bridge.handler",
    "MemorySize": 1024,
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ],
    "Timeout": 10,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "ApisendmessageServiceRoleDefaultPolicyA129B65D",
    "ApisendmessageServiceRole3662664F"
   ]
  },
  "ApisendmessageEventInvokeConfig64CFE2D9": {
   "Type": "AWS::Lambda::EventInvokeConfig",
   "Properties": {
    "FunctionName": {
     "Ref": "Apisendmessage758172CC"
    },
    "Qualifier": "$LATEST",
    "MaximumRetryAttempts": 0
   }
  },
  "ApiRoutesendmessageIntegrationsendmessagePermissionF7C95549": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Apisendmessage758172CC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:206508349906:",
       {
        "Ref": "ApiCD79AAA0"
       },
       "/*/*sendmessage"
      ]
     ]
    }
   }
  },
  "ApiRoutesendmessageIntegrationsendmessage2C5CF51C": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ApiCD79AAA0"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "Apisendmessage758172CC",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   }
  },
  "ApiRoutesendmessageD5AAAEEB": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ApiCD79AAA0"
    },
    "RouteKey": "sendmessage",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ApiRoutesendmessageIntegrationsendmessage2C5CF51C"
       }
      ]
     ]
    }
   }
  },
  "ApiParameterurl09B86AB9": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": {
     "Fn::Join": [
      "",
      [
       "wss://",
       {
        "Ref": "ApiCD79AAA0"
       },
       ".execute-api.us-east-1.",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/local"
      ]
     ]
    },
    "Name": "/sst/crow/local/WebSocketApi/Api/url",
    "Tags": {
     "sst:app": "crow",
     "sst:stage": "local"
    }
   }
  },
  "siteServerFunctionRole1F8F4FAC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "MaxSessionDuration": 43200,
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ]
   }
  },
  "siteServerFunctionRoleDefaultPolicy213DB8A5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iot:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": "arn:aws:s3:::sstbootstrap-useast124d14e4b-1hfi2zvusee82"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "siteServerFunctionRoleDefaultPolicy213DB8A5",
    "Roles": [
     {
      "Ref": "siteServerFunctionRole1F8F4FAC"
     }
    ]
   }
  },
  "siteServerFunctionA4E45ACA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-206508349906-us-east-1",
     "S3Key": "9fe9969c98dee83cbe72e215307d8491aa401ab9894e93572633e9002918d92c.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "siteServerFunctionRole1F8F4FAC",
      "Arn"
     ]
    },
    "Description": "Server handler placeholder",
    "Environment": {
     "Variables": {
      "SST_FUNCTION_ID": "c8aa1ceefdfa6d4a9fa27fb6d5d10ee0d9c320ca8a",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "SST_APP": "crow",
      "SST_STAGE": "local",
      "SST_SSM_PREFIX": "/sst/crow/local/"
     }
    },
    "EphemeralStorage": {
     "Size": 512
    },
    "Handler": "bridge.handler",
    "MemorySize": 1024,
    "Runtime": "nodejs16.x",
    "Tags": [
     {
      "Key": "sst:app",
      "Value": "crow"
     },
     {
      "Key": "sst:stage",
      "Value": "local"
     }
    ],
    "Timeout": 10,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "siteServerFunctionRoleDefaultPolicy213DB8A5",
    "siteServerFunctionRole1F8F4FAC"
   ]
  },
  "siteServerFunctionEventInvokeConfigFF1EDAB7": {
   "Type": "AWS::Lambda::EventInvokeConfig",
   "Properties": {
    "FunctionName": {
     "Ref": "siteServerFunctionA4E45ACA"
    },
    "Qualifier": "$LATEST",
    "MaximumRetryAttempts": 0
   }
  },
  "siteParameterurl3D1716BC": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": "localhost",
    "Name": "/sst/crow/local/NextjsSite/site/url",
    "Tags": {
     "sst:app": "crow",
     "sst:stage": "local"
    }
   }
  }
 },
 "Outputs": {
  "ApiEndpoint": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "wss://",
      {
       "Ref": "ApiCD79AAA0"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/local"
     ]
    ]
   }
  },
  "SSTMetadata": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "{\"app\":\"crow\",\"stage\":\"local\",\"version\":\"2.5.8\",\"metadata\":[{\"id\":\"Connections\",\"addr\":\"c8e2dc0ed067f9371ded50279e01b8b9578097c528\",\"stack\":\"local-crow-Site\",\"type\":\"Table\",\"data\":{\"tableName\":\"",
      {
       "Ref": "ConnectionsTable916FDB22"
      },
      "\",\"consumers\":[]}},{\"id\":\"Api\",\"addr\":\"c880b84e009ac9abf6a74861d39346ed3737e46dbf\",\"stack\":\"local-crow-Site\",\"type\":\"WebSocketApi\",\"data\":{\"httpApiId\":\"",
      {
       "Ref": "ApiCD79AAA0"
      },
      "\",\"routes\":[{\"route\":\"$connect\",\"fn\":{\"node\":\"c806965eb52afa97238316bc6a0cf9983493f217f1\",\"stack\":\"local-crow-Site\"}},{\"route\":\"$disconnect\",\"fn\":{\"node\":\"c86bdc78e88848195f82f4cbc6fa29b0e6979a9673\",\"stack\":\"local-crow-Site\"}},{\"route\":\"sendmessage\",\"fn\":{\"node\":\"c89d7e9fb7375544de45a5007d70c7b8ebd815187f\",\"stack\":\"local-crow-Site\"}}]}},{\"id\":\"$connect\",\"addr\":\"c806965eb52afa97238316bc6a0cf9983493f217f1\",\"stack\":\"local-crow-Site\",\"type\":\"Function\",\"data\":{\"arn\":\"",
      {
       "Fn::GetAtt": [
        "Apiconnect6ADFCB1F",
        "Arn"
       ]
      },
      "\",\"localId\":\"c806965eb52afa97238316bc6a0cf9983493f217f1\",\"secrets\":[]}},{\"id\":\"$disconnect\",\"addr\":\"c86bdc78e88848195f82f4cbc6fa29b0e6979a9673\",\"stack\":\"local-crow-Site\",\"type\":\"Function\",\"data\":{\"arn\":\"",
      {
       "Fn::GetAtt": [
        "ApidisconnectCB51A101",
        "Arn"
       ]
      },
      "\",\"localId\":\"c86bdc78e88848195f82f4cbc6fa29b0e6979a9673\",\"secrets\":[]}},{\"id\":\"sendmessage\",\"addr\":\"c89d7e9fb7375544de45a5007d70c7b8ebd815187f\",\"stack\":\"local-crow-Site\",\"type\":\"Function\",\"data\":{\"arn\":\"",
      {
       "Fn::GetAtt": [
        "Apisendmessage758172CC",
        "Arn"
       ]
      },
      "\",\"localId\":\"c89d7e9fb7375544de45a5007d70c7b8ebd815187f\",\"secrets\":[]}},{\"id\":\"site\",\"addr\":\"c869405f8809671a321c07b5f150058c1dee08d80e\",\"stack\":\"local-crow-Site\",\"type\":\"NextjsSite\",\"data\":{\"mode\":\"placeholder\",\"path\":\".\",\"server\":\"",
      {
       "Fn::GetAtt": [
        "siteServerFunctionA4E45ACA",
        "Arn"
       ]
      },
      "\",\"secrets\":[]}},{\"id\":\"ServerFunction\",\"addr\":\"c8aa1ceefdfa6d4a9fa27fb6d5d10ee0d9c320ca8a\",\"stack\":\"local-crow-Site\",\"type\":\"Function\",\"data\":{\"arn\":\"",
      {
       "Fn::GetAtt": [
        "siteServerFunctionA4E45ACA",
        "Arn"
       ]
      },
      "\",\"localId\":\"c8aa1ceefdfa6d4a9fa27fb6d5d10ee0d9c320ca8a\",\"secrets\":[]}}]}"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}